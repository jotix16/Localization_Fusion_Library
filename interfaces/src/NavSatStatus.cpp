////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                        //
//         This program is the confidential and proprietary product of IAV GmbH.          //
// Any unauthorised use, reproduction or transfer of this program is strictly prohibited. //
//                                  Copyright IAV GmbH.                                   //
//             (Subject to limited distribution and restricted disclosure only.)          //
//                                   All rights reserved.                                 //
//                                                                                        //
////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                        //
// This file is generated by IDLCodeGenPy 1.11.1                                          //
//                                                                                        //
// Please do not modify this file by hand!                                                //
//                                                                                        //
////////////////////////////////////////////////////////////////////////////////////////////


#include "sensor_msgs/msg/NavSatStatus.h"


namespace sensor_msgs
{
namespace msg
{

std::size_t NavSatStatus::serialize(void *pOutput) const
{
    if (!pOutput)
        return 0;
    uint8_t *buf = (uint8_t*)pOutput;

    *(uint8_t*)buf = status;
    buf += 1;
    *(uint16_t*)buf = service;
    buf += 2;

    return static_cast<std::size_t>(buf - (uint8_t*)pOutput);
}

std::size_t NavSatStatus::deserialize(const void *pInput)
{
    if (!pInput)
        return 0;

    const uint8_t *buf = (const uint8_t*)pInput;


    status = *reinterpret_cast<const uint8_t*>(buf);
    buf += 1;
    service = *reinterpret_cast<const uint16_t*>(buf);
    buf += 2;
    return static_cast<uint32_t>(buf - (uint8_t*)pInput);
}

//! \brief default ctor
NavSatStatus::NavSatStatus()
{

    status = 0;
    service = 0;
}

//! \brief dtor
NavSatStatus::~NavSatStatus()
{


}

//! \brief Copy constructor
NavSatStatus::NavSatStatus(const sensor_msgs::msg::NavSatStatus &other)
{

    status = other.status;
    service = other.service;}

std::size_t NavSatStatus::getSerializedSize() const
{
	std::size_t _size_ = 0;

    _size_ += 1;
    _size_ += 2;
    return _size_;
}

#ifndef IDL_NO_PTR_ASSIGNMENT_OP
sensor_msgs::msg::NavSatStatus& NavSatStatus::operator=(const sensor_msgs::msg::NavSatStatus &other)
{
    if (this != &other)
    {
        status = other.status;
        service = other.service;
    }
    return *this;
}
#endif //IDL_NO_PTR_ASSIGNMENT_OP
} // ns: msg

} // ns: sensor_msgs

