////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                        //
//         This program is the confidential and proprietary product of IAV GmbH.          //
// Any unauthorised use, reproduction or transfer of this program is strictly prohibited. //
//                                  Copyright IAV GmbH.                                   //
//             (Subject to limited distribution and restricted disclosure only.)          //
//                                   All rights reserved.                                 //
//                                                                                        //
////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                        //
// This file is generated by IDLCodeGenPy 1.11.1                                          //
//                                                                                        //
// Please do not modify this file by hand!                                                //
//                                                                                        //
////////////////////////////////////////////////////////////////////////////////////////////


#ifndef __POSE_DECL_H__
#define __POSE_DECL_H__


#include "topic_includes.h"

#include "Point.h"
#include "Quaternion.h"

#define __geometry_msgs__msg__Pose__idl 

#define IDL_HASH_POSE 0x15a3e726d1ebbc94ULL


namespace geometry_msgs {

    namespace msg {


#define geometry_msgs_msg_Pose_isPODType 1

//---------------------------------------------------------------------------
//! \class Pose
//!
//! \brief 
//
class Pose
{
public:
    //! \brief Constructor
    Pose();
    //! \brief Destructor
    ~Pose();

    //! \brief Copy constructor
    Pose(const geometry_msgs::msg::Pose &other);

    //! \brief Assignment operator
    geometry_msgs::msg::Pose& operator=(const geometry_msgs::msg::Pose &other);
#ifndef IDL_NO_PTR_ASSIGNMENT_OP
    //! \brief Assignment operator for pointer source
    inline geometry_msgs::msg::Pose& operator=(const geometry_msgs::msg::Pose *other) { *this = *other; return *this; }
#endif

    //! \brief Calculates how many bytes will be needed to serialize the object in its current state.
    std::size_t getSerializedSize() const;

    //! \brief Serialize data into 'buffer'. The buffer needs to have at least the size that getSerializedSize() returns.
    std::size_t serialize(void *buffer) const;

    //! \brief Deserialize data from buffer. The buffer needs to have at least the size that getSerializedSize() returns.
    std::size_t deserialize(const void *buffer);

    //! \brief Indicator function to signal that the class is purely made of simple data types
    static bool isPODType() { return true; }


public:
    geometry_msgs::msg::Point position;        
    geometry_msgs::msg::Quaternion orientation;
}; // struct: Pose

} // ns: msg

} // ns: geometry_msgs


#endif // __POSE_DECL_H__

